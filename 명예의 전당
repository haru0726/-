function solution(k, score) {
    const minHeap = [];  // 최소 힙을 사용해서 점수 관리
    const answer = [];   // 결과 배열
    
    // Min-Heap을 위한 함수들
    function pushHeap(heap, value) {
        heap.push(value);
        let idx = heap.length - 1;
        while (idx > 0) {
            let parentIdx = Math.floor((idx - 1) / 2);
            if (heap[parentIdx] <= heap[idx]) break;
            [heap[parentIdx], heap[idx]] = [heap[idx], heap[parentIdx]];
            idx = parentIdx;
        }
    }

    function popHeap(heap) {
        if (heap.length === 0) return null;
        let root = heap[0];
        heap[0] = heap.pop();
        let idx = 0;
        while (true) {
            let left = 2 * idx + 1;
            let right = 2 * idx + 2;
            let smallest = idx;
            if (left < heap.length && heap[left] < heap[smallest]) smallest = left;
            if (right < heap.length && heap[right] < heap[smallest]) smallest = right;
            if (smallest === idx) break;
            [heap[idx], heap[smallest]] = [heap[smallest], heap[idx]];
            idx = smallest;
        }
        return root;
    }

    for (let i = 0; i < score.length; i++) {
        pushHeap(minHeap, score[i]);
        
        if (minHeap.length > k) {
            popHeap(minHeap);  // 명예의 전당이 k개를 초과하면 최소값을 제거
        }

        answer.push(minHeap[0]);  // 명예의 전당에서 최하위 점수를 기록
    }
    
    return answer;
}
